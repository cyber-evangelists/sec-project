from fastapi import FastAPI, HTTPException
import nmap
import docker
import re
app = FastAPI()

@app.get("/scan/")
async def scan(ip: str, start_port: int = 1, end_port: int = 1024):
    if not (0 < start_port <= 65535 and 0 < end_port <= 65535):
        raise HTTPException(status_code=400, detail="Invalid port range")

    nmScan = nmap.PortScanner()
    result = nmScan.scan(ip, f"{start_port}-{end_port}")

    filtered_ports = []

    for port, details in result["scan"][ip]["tcp"].items():
        product_version = f"{details['product']} {details['version']}"
        if details["state"] == "open" and details["name"] == "ftp":
            filtered_ports.append({
                "port": port,
                "state": details["state"],
                "name": details["name"],
                "product_version": product_version
            })
    product_versions = ", ".join(port["product_version"] for port in filtered_ports)
    container_name = 'quirky_khorana'
    half_command = 'searchsploit'
    full_command = f"{half_command} {product_versions}"


    output= (run_command_in_container(container_name,full_command))
    return (output)
   
# def extract_py_files(output):
#     py_files = []
#     # Use regular expression to find lines containing .py files
#     matches = re.findall(r'\| (.+\.py)', output)
#     # Append matched filenames to the list
#     for match in matches:
#         py_files.append(match.strip())
#     return py_files


def run_command_in_container(container_name, command):
    client = docker.from_env()
    container = client.containers.get(container_name)
    exec_command = f"bash -c '{command}'"
    exec_response = container.exec_run(exec_command)
    return exec_response.output.decode('utf-8')

# Replace 'searchsploit_container' with the actual name of your container
# container_name = 'quirky_khorana'
# command = 'searchsploit vsftpd 2.3.4'

# output = run_command_in_container(container_name, command)
# print(output)

  
    
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
